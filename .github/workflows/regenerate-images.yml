name: Regenerate Blog Images

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  regenerate:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r tools/requirements.txt

      - name: Ensure dirs
        run: |
          mkdir -p content/blog
          mkdir -p public/images/blog

      - name: Regenerate images for all blog posts
        shell: bash
        run: |
          set -euo pipefail
          # Iterate over mdx files and call the generator using the title from frontmatter
          for f in content/blog/*.mdx; do
            if [ -f "$f" ]; then
              title=$(awk '/^title:/{print; exit}' "$f" | sed -E "s/^title:\s*['\"]?(.*)['\"]?$/\1/")
              echo "Generating images for: $title"
              python tools/generate_article.py --topic "$title" --style fotografico --accent azul --details "regeneracion imagenes" --images 1 || true
            fi
          done

      - name: Commit and push images
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/images/blog || true
          git add content/blog || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "chore(content): regenerate images via workflow"
          git push
